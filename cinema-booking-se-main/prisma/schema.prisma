// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema


datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}


generator client {
  provider        = "prisma-client-js"
}

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  firstName String
  lastName String
  avatar String? @default("https://upload.wikimedia.org/wikipedia/commons/thumb/b/b5/Windows_10_Default_Profile_Picture.svg/2048px-Windows_10_Default_Profile_Picture.svg.png")
  email String @unique
  hashedPassword String
  favouriteMovies String[] @db.ObjectId
  type String @default("User")
  tickets Ticket[]
}

model VerificationToken {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token String @unique
  expires DateTime
  @@unique([identifier,token])
}

model Movie {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  title String? @unique
  description String?
  bannerUrl String?
  rating String?
  trailer String?
  storyline String?
  genre String[]
  duration String
  releaseYear String
  writers String[]
  actors String[]
  casts  String[]
  actorImagesUrl String[]
  galleryImages String[]
  showtimes Showtime[]
  tickets Ticket[]
} 

model Ticket {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  user User @relation(fields: [userId], references: [id])
  userId String @db.ObjectId
  movie Movie @relation(fields: [movieId], references: [id])
  movieId String @db.ObjectId
  dateTime String
  seatNumber  String
  hallNumber String
  barcode String
} 

model Showtime {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  movie Movie @relation(fields: [movieId], references: [id])
  movieId String @db.ObjectId
  dateTime DateTime
  type String
  seatStatus SeatStatus[]
}

model SeatStatus {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  showtime  Showtime  @relation(fields: [showtimeId], references: [id])
  showtimeId String   @db.ObjectId
  seatRow   String
  seatNumber Int
}

